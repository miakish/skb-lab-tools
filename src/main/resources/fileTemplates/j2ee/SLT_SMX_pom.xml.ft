<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    ##<groupId>com.itprofix.smxk8s.<!--srv/adp--></groupId>
    <groupId>${GROUP_ID}</groupId>
    <artifactId>${ARTIFACT_ID}</artifactId>
    <version>${VERTION}</version>

    <name>SMX :: K8S :: </name>

    <properties>
        <!--		DEFAULT:-->
        <!--		REPLICAS_COUNT: 1-->
        <!--		maxUnavailable: 0-->
        <!--		maxSurge: 1-->
        <!--		cpuReq: 100m-->
        <!--		memReq: 128Mi-->
        <!--		cpuLim: 200m-->
        <!--		memLim: 300Mi-->
        <!--		prof_vars:-->
        <!--		- var:-->
        <!--		name: FUSE_ENC-->
        <!--		value: {{FUSE_ENC}}-->
        <!--		- var:-->
        <!--		name: JAVA_OPTS-->
        <!--		value: "-Xmx150m -Xms64m"-->
        <!--		HUGE:-->
        <!--		REPLICAS_COUNT: 1-->
        <!--		maxUnavailable: 0-->
        <!--		maxSurge: 1-->
        <!--		cpuReq: 100m-->
        <!--		memReq: 664Mi-->
        <!--		cpuLim: 200m-->
        <!--		memLim: 1328Mi-->
        <!--		prof_vars:-->
        <!--		- var:-->
        <!--		name: FUSE_ENC-->
        <!--		value: {{FUSE_ENC}}-->
        <!--		- var:-->
        <!--		name: JAVA_OPTS-->
        <!--		value: "-Xmx1124m -Xms448m"-->
        <!--		HUGE2:-->
        <!--		REPLICAS_COUNT: 2-->
        <!--		maxUnavailable: 1-->
        <!--		maxSurge: 1-->
        <!--		cpuReq: 100m-->
        <!--		memReq: 664Mi-->
        <!--		cpuLim: 200m-->
        <!--		memLim: 1328Mi-->
        <!--		prof_vars:-->
        <!--		- var:-->
        <!--		name: FUSE_ENC-->
        <!--		value: {{FUSE_ENC}}-->
        <!--		- var:-->
        <!--		name: JAVA_OPTS-->
        <!--		value: "-Xmx1124m -Xms448m"-->
        <!--		TINY:-->
        <!--		REPLICAS_COUNT: 1-->
        <!--		maxUnavailable: 0-->
        <!--		maxSurge: 1-->
        <!--		cpuReq: 100m-->
        <!--		memReq: 256Mi-->
        <!--		cpuLim: 200m-->
        <!--		memLim: 512Mi-->
        <!--		prof_vars:-->
        <!--		- var:-->
        <!--		name: FUSE_ENC-->
        <!--		value: {{FUSE_ENC}}-->
        <!--		- var:-->
        <!--		name: JAVA_OPTS-->
        <!--		value: "-Xmx309m -Xms128m"-->
        <!-- DEFAULT -->
        <!-- HUGE -->
        <!-- HUGE2 -->
        <!-- TINY -->
    #if(${DEPLOY_PROFILE} != $null && ${DEPLOY_PROFILE}!='DEFAULT' )
        <DEPLOY_PROFILE>${DEPLOY_PROFILE}</DEPLOY_PROFILE>
    #end

        <maven-compiler-plugin-version>3.8.1</maven-compiler-plugin-version>
        <maven-shade-plugin-verion>3.2.0</maven-shade-plugin-verion>
        <maven.build.timestamp.format>yyyy-MM-dd HH:mm:ssZ</maven.build.timestamp.format>
        <common-routes-version>3.4.3</common-routes-version>
        <camel-version>3.14.1</camel-version>
        <encoding>UTF-8</encoding>
    #if(${JAVA_VERSION} == 'CryptoPro')
        <java-version>8</java-version>
    #else
        <java-version>${JAVA_VERSION}</java-version>
    #end
    #if(${JAVA_VERSION} == 'CryptoPro')
        <jdk-image>app-registry01.corp.skbbank.ru/smx/cryptopro-jdk:4.4</jdk-image>
        <docker-maven-plugin-version>0.27.2</docker-maven-plugin-version>
    #elseif(${JAVA_VERSION} == '8')
        <jdk-image>app-registry01.corp.skbbank.ru/smx/openjdk/openjdk:jre8u292-b10</jdk-image>
        <docker-maven-plugin-version>0.27.2</docker-maven-plugin-version>
    #elseif(${JAVA_VERSION} == '11')
        <jdk-image>app-registry01.corp.skbbank.ru/smx/openjdk11/openjdk11:jre-11.0.11_9</jdk-image>
        <docker-maven-plugin-version>0.34.1</docker-maven-plugin-version>
    #end
        <main-class><!--com.itprofix.smxk8s.Main-->${PROJECT_PACKAGE}.Main</main-class>
        <maven.test.skip>false</maven.test.skip>
        <final-name>#[[${project.groupId}.${project.artifactId}-${project.version}]]#</final-name>
        <project.build.sourceEncoding>#[[${encoding}]]#</project.build.sourceEncoding>
        <project.reporting.outputEncoding>#[[${encoding}]]#</project.reporting.outputEncoding>
        <project.resources.sourceEncoding>#[[${encoding}]]#</project.resources.sourceEncoding>
        <java-source-version>#[[${java-version}]]#</java-source-version>
        <java-target-version>#[[${java-version}]]#</java-target-version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-bom</artifactId>
                <version>#[[${camel-version}]]#</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>com.itprofix.soa</groupId>
            <artifactId>common-routes</artifactId>
            <version>#[[${common-routes-version}]]#</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.12</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-velocity</artifactId>
        </dependency>

    #if(${CRYPTOPRO_METRICS_ENABLED} && ${CRYPTOPRO_METRICS_ENABLED}=='true')
        <!-- cryptopro -->
        <dependency>
            <groupId>com.itprofix.lib.cryptopro</groupId>
            <artifactId>metrics</artifactId>
            <version>1.0.0</version>
        </dependency>
    #end
        <!-- testing -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <defaultGoal>install</defaultGoal>
        <finalName>#[[${final-name}]]#</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/env.yml</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <excludes>
                    <exclude>**/env.yml</exclude>
                </excludes>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>#[[${maven-compiler-plugin-version}]]#</version>
                <configuration>
                    <source>#[[${java-source-version}]]#</source>
                    <target>#[[${java-target-version}]]#</target>
                </configuration>
            </plugin>
            #if(${JAVA_VERSION} == 'CryptoPro')
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <nonFilteredFileExtensions>
                        <nonFilteredFileExtension>cer</nonFilteredFileExtension>
                        <nonFilteredFileExtension>certstore</nonFilteredFileExtension>
                    </nonFilteredFileExtensions>
                </configuration>
            </plugin>
            #end

            <!-- Собирает жирный JAR для деплоя в кубер -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>#[[${maven-shade-plugin-verion}]]#</version>
                <executions>
                    <!-- Run shade goal on package phase -->
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <finalName>#[[${final-name}]]#</finalName>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>META-INF/services/org/apache/camel/TypeConverterLoader</resource>
                                </transformer>
                                <!-- add Main-Class to manifest file -->
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <manifestEntries>
                                        <Main-Class>#[[${main-class}]]#</Main-Class>
                                        <artifact>#[[${final-name}]]#</artifact>
                                        <build-time>#[[${maven.build.timestamp}]]#</build-time>
                                    </manifestEntries>
                                </transformer>
                            </transformers>
                            <filters>
                                <filter>
                                    <artifact>com.itprofix.soa:common-routes</artifact>
                                    <excludes>
                                        <exclude>com/itprofix/soa/cr/support/SmxCamelTestSupport*</exclude>
                                    </excludes>
                                </filter>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>**/Log4j2Plugins.dat</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                            <artifactSet>
                                <excludes>
                                    <exclude>junit:junit</exclude>
                                    <exclude>org.apache.camel:camel-test</exclude>
                                    <exclude>org.hsqldb:hsqldb</exclude>
                                    <exclude>org.xmlunit:xmlunit-core</exclude>
                                    <exclude>net.javacrumbs.json-unit:json-unit</exclude>
                                </excludes>
                            </artifactSet>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Деплой в кубер, скопировано с родительского помника -->
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>#[[${docker-maven-plugin-version}]]#</version>
                <configuration>
                    <!--suppress UnresolvedMavenProperty -->
                    <pushRegistry>#[[${env.SKBLAB_REGISTRY_URL}]]#</pushRegistry>
                    <authConfig>
                        <push>
                            <!--suppress UnresolvedMavenProperty -->
                            <username>#[[${env.SKBLAB_REGISTRY_USER}]]#</username>
                            <!--suppress UnresolvedMavenProperty -->
                            <password>#[[${env.SKBLAB_REGISTRY_PWD}]]#</password>
                        </push>
                        <pull>
                            <!--suppress UnresolvedMavenProperty -->
                            <username>#[[${env.SKBLAB_REGISTRY_USER}]]#</username>
                            <!--suppress UnresolvedMavenProperty -->
                            <password>#[[${env.SKBLAB_REGISTRY_PWD}]]#</password>
                        </pull>
                    </authConfig>
                    <images>
                        <image>
                            <name>%g/%a:%l</name>
                            <build>
                                <from>#[[${jdk-image}]]#</from>
                                <tags>
                                    <!--suppress UnresolvedMavenProperty -->
                                    <tag>#[[${env.IMAGE_TAG}]]#</tag>
                                </tags>
                                <assembly>
                                    <descriptorRef>artifact</descriptorRef>
                                </assembly>
                                <env>
                                    <!--<JAVA_OPTS>-Xmx256m -Xms128m</JAVA_OPTS>-->
                                    <APP_OPTS>
                                        -Djava.security.egd=file:/dev/./urandom
                                        -XX:+UnlockExperimentalVMOptions
                                    #if(${JAVA_VERSION} == 'CryptoPro' || ${JAVA_VERSION} == '8')
                                        -XX:+UseCGroupMemoryLimitForHeap <!--java-version = 8-->
                                    #end
                                        -Dconfig.location=file:/conf/app.properties
                                        -Dmars.location=file:/mars/mars.cfg
                                    #if(${JAVA_VERSION} == 'CryptoPro')
                                        -Djava.util.prefs.systemRoot=$JAVA_HOME/jre/.systemPrefs
                                        -Djava.util.prefs.userRoot=$JAVA_HOME/jre/.userPrefs
                                    #end
                                    </APP_OPTS>
                                </env>
                                <runCmds>
                                    <run>addgroup -g 1000 -S appUser</run>
                                    <run>adduser -u 1000 -S -G appUser appUser</run>
                                #if(${JAVA_VERSION} == 'CryptoPro')
                                    <run>mkdir -p $JAVA_HOME/jre/.systemPrefs</run>
                                    <run>chmod -R 777 $JAVA_HOME/jre/.systemPrefs</run>
                                    <run>chown -R appUser:appUser $JAVA_HOME/jre/.systemPrefs</run>
                                    <run>mkdir -p $JAVA_HOME/jre/.userPrefs</run>
                                    <run>chmod -R 777 $JAVA_HOME/jre/.userPrefs</run>
                                    <run>chown -R appUser:appUser $JAVA_HOME/jre/.userPrefs</run>
                                    <run>mkdir -p /var/opt/cprocsp/keys/appUser/AUTH-KEY.000</run>
                                    <run>chown -R appUser:appUser /var/opt/cprocsp/keys/appUser</run>
                                #end
                                </runCmds>
                                <user>appUser</user>
                                <entryPoint>#[[java $JAVA_OPTS $APP_OPTS -jar maven/${project.build.finalName}.jar]]#</entryPoint>
                            </build>
                            <run>
                                <user>appUser</user>
                            </run>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <repositories>
        <repository>
            <id>skblab-maven</id>
            <name>repos.skblab.ru-maven</name>
            <url>https://artifactory.skblab.ru/artifactory/maven</url>
            <snapshots>
                <updatePolicy>always</updatePolicy>
            </snapshots>
        </repository>
        <repository>
            <id>central_1</id>
            <name>repos.skblab.ru-releases</name>
            <url>https://artifactory.skblab.ru/artifactory/smx</url>
            <snapshots>
                <updatePolicy>always</updatePolicy>
            </snapshots>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>skblab-maven</id>
            <name>repos.skblab.ru-maven</name>
            <url>https://artifactory.skblab.ru/artifactory/maven</url>
        </pluginRepository>
    </pluginRepositories>

</project>